generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(uuid())
  email       String      @unique
  name        String?
  password    String?
  chats       Chat[]
  decks       Deck[]
  quizzes     QuizSet[]
  spreadsheet Spreadsheet[]
  phrase      Phrase[]
  note        Note[]
  overview    Overview?
}

model Chat {
  id          String   @id @default(uuid())
  userId      String
  name        String
  description String
  messages    Message[]
  user        User     @relation(fields: [userId], references: [id])
}

model Message {
  id        String   @id @default(uuid())
  chatId    String
  role      String
  message   String
  timeStamp DateTime
  chat      Chat     @relation(fields: [chatId], references: [id])
}

model Deck {
  id         String   @id @default(uuid())
  name       String
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  flashcards Flashcard[]
}

model Flashcard {
  id         String   @id @default(uuid())
  deckId     String
  question   String
  answer     String
  stats      String
  deck       Deck     @relation(fields: [deckId], references: [id])
}

model QuizSet {
  id       String   @id @default(uuid())
  name     String
  userId   String
  user     User     @relation(fields: [userId], references: [id])
  quizzes  Quiz[]
}

model Quiz {
  id         String   @id @default(uuid())
  quizSetId  String
  question   String
  answer     String
  optionA    String
  optionB    String
  optionC    String
  optionD    String
  quizSet    QuizSet  @relation(fields: [quizSetId], references: [id])
}

model Spreadsheet {
  id            String   @id @default(uuid()) @unique
  userId        String
  word          String
  translation   String
  user          User     @relation(fields: [userId], references: [id])
}

model Phrase {
  id            String   @id @default(uuid()) @unique
  userId        String
  phrase        String
  translation   String
  user          User     @relation(fields: [userId], references: [id])
}

model Note {
  id            String   @id @default(uuid()) @unique
  userId        String
  content       String
  user          User     @relation(fields: [userId], references: [id])
}

model Overview {
  id            String   @id @default(uuid()) @unique
  userId        String   @unique
  englishLevel  String
  strengths     String[]
  weaknesses    String[]
  user          User     @relation(fields: [userId], references: [id])
}